package gql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"

	"github.com/irdaislakhuafa/octacat-app-backend/src/handler/gql/generated/model"
	"github.com/irdaislakhuafa/octacat-app-backend/src/handler/gql/generated/server"
	"github.com/irdaislakhuafa/octacat-app-backend/src/handler/gql/generated/transform"
)

// GetList is the resolver for the getList field.
func (r *userQueryResolver) GetList(ctx context.Context, obj *model.UserQuery, param model.GetListParams) (*model.UserPagination, error) {
	params, err := transform.FromGetListParams(param)
	if err != nil {
		return nil, err
	}

	results, err := r.Usecase.User.GetListWithPagination(ctx, params)
	if err != nil {
		return nil, err
	}

	total, err := r.Usecase.User.Count(ctx)
	if err != nil {
		return nil, err
	}

	response, err := transform.ToUserPaginationModel(params, total, results...)
	if err != nil {
		return nil, err
	}

	return &response, nil
}

// UserQuery returns server.UserQueryResolver implementation.
func (r *Resolver) UserQuery() server.UserQueryResolver { return &userQueryResolver{r} }

type userQueryResolver struct{ *Resolver }
